{"version":3,"sources":["app.js"],"names":["path","require","express","bodyParser","errorController","mongoConnect","User","app","set","adminRoutes","shopRoutes","MongoKerberosError","use","urlencoded","extended","join","__dirname","req","res","next","findByPk","then","user","name","email","cart","_id","err","console","log","get404","listen"],"mappings":";;AAAA;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB,C,CAEA;;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACA,IAAMG,eAAe,GAAGH,OAAO,CAAC,qBAAD,CAA/B,C,CAEA;;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,iBAAD,CAAP,CAA2BI,YAAhD,C,CAEA;;;AACA,IAAMC,IAAI,GAAGL,OAAO,CAAC,eAAD,CAApB,C,CAEA;;;AACA,IAAMM,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;;AAEAK,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiB,OAAjB,E,CAEA;;AACA,IAAMC,WAAW,GAAGR,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMS,UAAU,GAAGT,OAAO,CAAC,eAAD,CAA1B;;eAC+BA,OAAO,CAAC,SAAD,C;IAA9BU,kB,YAAAA,kB,EAER;;;AACAJ,GAAG,CAACK,GAAJ,CAAQT,UAAU,CAACU,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAP,GAAG,CAACK,GAAJ,CAAQV,OAAO,UAAP,CAAeF,IAAI,CAACe,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CAEA;;AACAT,GAAG,CAACK,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1Bb,EAAAA,IAAI,CAACc,QAAL,CAAc,GAAd,EACGC,IADH,CACQ,UAAAC,IAAI,EAAI;AACZL,IAAAA,GAAG,CAACK,IAAJ,GAAW,IAAIhB,IAAJ,CAASgB,IAAI,CAACC,IAAd,EAAoBD,IAAI,CAACE,KAAzB,EAAgCF,IAAI,CAACG,IAArC,EAA2CH,IAAI,CAACI,GAAhD,CAAX;AACAP,IAAAA,IAAI;AACL,GAJH,WAKS,UAAAQ,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GALZ;AAMD,CAPD,E,CASA;;AACApB,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBH,WAAlB;AACAF,GAAG,CAACK,GAAJ,CAAQF,UAAR,E,CAEA;;AACAH,GAAG,CAACK,GAAJ,CAAQR,eAAe,CAAC0B,MAAxB,E,CAEA;;AACAzB,YAAY,CAAC,YAAM;AACjBE,EAAAA,GAAG,CAACwB,MAAJ,CAAW,IAAX;AACD,CAFW,CAAZ","sourcesContent":["// requires path object, the object is defined in the other .js files\r\nconst path = require('path')\r\n\r\n// requires express module installed\r\nconst express = require('express')\r\n\r\n// requires body-parser object, defined on other .js pages\r\nconst bodyParser = require('body-parser')\r\n\r\n// imports error controller location\r\nconst errorController = require('./controllers/error')\r\n\r\n// import mongoconnect method\r\nconst mongoConnect = require('./util/database').mongoConnect\r\n\r\n// import User model\r\nconst User = require('./models/user')\r\n\r\n// creates express object named app\r\nconst app = express()\r\n\r\n// sets global config value, this is settings the default engine and its location\r\n\r\napp.set('view engine', 'ejs')\r\napp.set('views', 'views')\r\n\r\n// creates objects with a path defined\r\nconst adminRoutes = require('./routes/admin')\r\nconst shopRoutes = require('./routes/shop')\r\nconst { MongoKerberosError } = require('mongodb')\r\n\r\n// not sure\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// defines a location to allow access to files you otherwise could not access\r\napp.use(express.static(path.join(__dirname, 'public')))\r\n\r\n// registering middleware, function call to database to retrieve user\r\napp.use((req, res, next) => {\r\n  User.findByPk('1')\r\n    .then(user => {\r\n      req.user = new User(user.name, user.email, user.cart, user._id)\r\n      next()\r\n    })\r\n    .catch(err => console.log(err))\r\n})\r\n\r\n// defines page locations\r\napp.use('/admin', adminRoutes)\r\napp.use(shopRoutes)\r\n\r\n// defines response for a url error 404\r\napp.use(errorController.get404)\r\n\r\n// execute mongoconnect method\r\nmongoConnect(() => {\r\n  app.listen(3000)\r\n})\r\n"],"file":"app.dev.js"}