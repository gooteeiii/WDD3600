{"version":3,"sources":["app.js"],"names":["path","require","express","bodyParser","errorController","mongoConnect","User","app","set","adminRoutes","shopRoutes","MongoKerberosError","use","urlencoded","extended","join","__dirname","next","findByPk","user","req","then","name","email","cart","_id","err","console","get404","listen"],"mappings":"aACA,IAAMA,KAAOC,QAAQ,QAGfC,QAAUD,QAAQ,WAGlBE,WAAaF,QAAQ,eAGrBG,gBAAkBH,QAAQ,uBAG1BI,aAAeJ,QAAQ,mBAAmBI,aAG1CC,KAAOL,QAAQ,iBAGfM,IAAML,UAIZK,IAAIC,IAAI,cAAe,OACvBD,IAAIC,IAAI,QAAS,SAGjB,IAAMC,YAAcR,QAAQ,kBACtBS,WAAaT,QAAQ,0BACIA,QAAQ,WAA/BU,4BAAAA,mBAGRJ,IAAIK,IAAIT,WAAWU,WAAW,CAAEC,UAAU,KAAVA,IAAAA,IAAAA,QAAU,OAAAd,KAAAe,KAAAC,UAAA,YAG1CT,IAAIK,IAAIV,SAAAA,EAAAA,EAAOe,GAIbX,KAAKY,SAAS,KADZN,KAAI,SAAAO,GACFC,EAACF,KAAS,IACXG,KAAKF,EAAAG,KAAAH,EAAQI,MAAAJ,EAAAK,KAAAL,EAAAM,KACZL,MAFJ,MAAA,SAAAM,GAKS,OAAAC,QAAAD,IAAGA,OAIdnB,IAAIK,IAAI,SAAUH,aAAlBF,IAAIK,IAAIF,YAIRH,IAAIK,IAAIR,gBAAgBwB,QAItBrB,aAAW,WADbA,IAAAsB,OAAA","file":"app.min.js","sourcesContent":["// requires path object, the object is defined in the other .js files\r\nconst path = require('path')\r\n\r\n// requires express module installed\r\nconst express = require('express')\r\n\r\n// requires body-parser object, defined on other .js pages\r\nconst bodyParser = require('body-parser')\r\n\r\n// imports error controller location\r\nconst errorController = require('./controllers/error')\r\n\r\n// import mongoconnect method\r\nconst mongoConnect = require('./util/database').mongoConnect\r\n\r\n// import User model\r\nconst User = require('./models/user')\r\n\r\n// creates express object named app\r\nconst app = express()\r\n\r\n// sets global config value, this is settings the default engine and its location\r\n\r\napp.set('view engine', 'ejs')\r\napp.set('views', 'views')\r\n\r\n// creates objects with a path defined\r\nconst adminRoutes = require('./routes/admin')\r\nconst shopRoutes = require('./routes/shop')\r\nconst { MongoKerberosError } = require('mongodb')\r\n\r\n// not sure\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// defines a location to allow access to files you otherwise could not access\r\napp.use(express.static(path.join(__dirname, 'public')))\r\n\r\n// registering middleware, function call to database to retrieve user\r\napp.use((req, res, next) => {\r\n  User.findByPk('1')\r\n    .then(user => {\r\n      req.user = new User(user.name, user.email, user.cart, user._id)\r\n      next()\r\n    })\r\n    .catch(err => console.log(err))\r\n})\r\n\r\n// defines page locations\r\napp.use('/admin', adminRoutes)\r\napp.use(shopRoutes)\r\n\r\n// defines response for a url error 404\r\napp.use(errorController.get404)\r\n\r\n// execute mongoconnect method\r\nmongoConnect(() => {\r\n  app.listen(3000)\r\n})\r\n"]}